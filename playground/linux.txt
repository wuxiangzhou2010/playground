#include <stdio.h>
int fprintf(FILE *stream, const char *format, ...);
int sprintf(char *str, const char *format, ...);
NAME
       index, rindex - locate character in string
SYNOPSIS
       #include <strings.h>
       char *index(const char *s, int c);
       char *rindex(const char *s, int c);
DESCRIPTION
       The index() function returns a pointer to the first occurrence of the character c in the string s.
       The rindex() function returns a pointer to the last occurrence of the character c in the string s.
  F_OK tests for the existence of the file.  R_OK,
       W_OK, and X_OK test whether the file exists and grants read, write, and execute permissions, respectively.
NAME
       unlink - delete a name and possibly the file it refers to
SYNOPSIS
       #include <unistd.h>
       int unlink(const char *pathname);
NAME
       offsetof - offset of a structure member
SYNOPSIS
       #include <stddef.h>
       size_t offsetof(type, member);
DESCRIPTION
       The macro offsetof() returns the offset of the field member from the start of the structure type.
------------------------------------------------------------------------------
Process related
NAME
       execl, execlp, execle, execv, execvp, execvpe - execute a file
SYNOPSIS
       #include <unistd.h>
       extern char **environ;
       int execl(const char *path, const char *arg, ...);
       int execlp(const char *file, const char *arg, ...);
       int execle(const char *path, const char *arg,
                  ..., char * const envp[]);
       int execv(const char *path, char *const argv[]);
       int execvp(const char *file, char *const argv[]);
       int execvpe(const char *file, char *const argv[],
                  char *const envp[]);
   The  const char *arg and subsequent ellipses in the execl(), execlp(), and execle() functions can be thought of
       as arg0, arg1, ..., argn.  Together they describe a list of one or more  pointers  to  null-terminated  strings
       that  represent the argument list available to the executed program.  The first argument, by convention, should
       point to the filename associated with the file being executed.  The list of arguments must be terminated  by  a
       NULL pointer, and, since these are variadic functions, this pointer must be cast (char *) NULL.
------------------------------------------------------------------------------
Time Releated
gettimeofday, settimeofday - get / set time
#include <sys/time.h>
       int gettimeofday(struct timeval *tv, struct timezone *tz);
       int settimeofday(const struct timeval *tv, const struct timezone *tz);
localtime_r
strftime
------------------------------------------------------------------------------
Thread related
   pthread_create - create a new thread
SYNOPSIS
       #include <pthread.h>
       int pthread_create(pthread_t *thread, const pthread_attr_t *attr,
                          void *(*start_routine) (void *), void *arg);

pthread_setname_np(non portable)
[POSIX Threads Programming]https://computing.llnl.gov/tutorials/pthreads/
------------------------------------------------------------------------------
Signal Releated
#include <signal.h>

int sigaction(int signum, const struct sigaction *act,
             struct sigaction *oldact);
